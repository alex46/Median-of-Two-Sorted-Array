public class Solution {
    public static double findMedianSortedArrays(int A[], int B[]) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(A==null && B==null) return 0.0;
        
        int m = A.length;
        int n = B.length;
        return helper(A,B,0,m,0,n);
    }
    
    public static double helper(int[]A,int[]B, int start1,int end1,int start2,int end2){
        
        
        int m = end1-start1;
        int n = end2-start2;
        
        if(m==1 && n == 1) return (A[m] + B[n])/2;
        
        if(m == 2 && n == 2) return (Math.max(A[start1],B[start1])+Math.min(A[start2],B[start2]))/2;
        
        int med1 =0;
        int med2=0;
        
        if(A==null) return med2;
        if(B==null) return med1;
        
        if(m % 2 ==1) med1 = A[m/2];
        else med1 = (A[m/2-1] + A[m/2])/2;
        
        if(n % 2 ==1) med2 = B[n/2];
        else med2 = (A[n/2-1] + A[n/2])/2;
       
        
        if(med1 == med2) return med1;
        
        if(med1 > med2) return helper(B,A,n/2,end2,start1,m/2);
       // if(med1 > med2) return helper(A,B,start1,m/2,n/2,end2);
        else return helper(A,B,m/2,end1,start2,n/2+1);
    }
    
    public static void main(String[] args){
       int[] A = {1,2,3,4};
        int[] B = {4,6,7,9};
        
        System.out.println(findMedianSortedArrays(A,B));
    }
    

}
